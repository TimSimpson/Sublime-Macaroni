<?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
    <plist version="1.0">
    <dict>
       <key>fileTypes</key>
       <array>
          <string>mcpp</string>
          <string>mh</string>
       </array>
       <key>name</key>
       <string>Macaroni</string>
       <key>patterns</key>
       <array>

<dict>
<key>comment</key>
<string>
                BEGIN CUSTOM SYNTAX RULES

Here's where any of Macaroni's special keywords are defined.

It's hard to know what the name key should be. Here are some rules from the default theme and how they appear in the Monokai color scheme:
  support.function - This is blue. "class" uses this.
  storage.modifier - This is red. The access mode, const, and the friend keywords all use this.
  constant.language - Purplish blue.
  entity.name.class.c++
  keyword.control.c++
  #preprocessor-rule-enabled - Read
</string>
</dict>

<dict>
    <key>comment</key>
    <string>
      This defines the import statement.
    </string>
    <key>begin</key>
    <string>\~import\s+</string>
    <key>beginCaptures</key>
    <dict>
        <key>0</key>
        <dict>
            <key>name</key>
            <string>keyword</string>
        </dict>
    </dict>

    <key>name</key>
    <string>string.quoted.single.c</string>

    <key>end</key>
    <string>;</string>
    <key>endCaptures</key>
    <dict>
      <key>0</key>
      <dict>
          <key>name</key>
          <string>keyword</string>
      </dict>
    </dict>
</dict>


<dict>
    <key>comment</key>
    <string>
      This defines the ~unit keyword.

      TODO: Make the type keyword appear as its own color.
    </string>
    <key>begin</key>
    <string>\~unit\s+</string>
    <key>beginCaptures</key>
    <dict>
        <key>0</key>
        <dict>
            <key>name</key>
            <string>keyword</string>
        </dict>
    </dict>

    <key>name</key>
    <string>string.quoted.single.c</string>

    <key>end</key>
    <string>\s*\s*;</string>
    <key>endCaptures</key>
    <dict>
      <key>0</key>
      <dict>
          <key>name</key>
          <string>keyword</string>
      </dict>
    </dict>
</dict>


<dict>
  <key>comment</key>
  <string>
     Things in Macaroni which define where code lives.
  </string>
  <key>match</key>
<string>\~(block|unit|namespace)\s+</string>
<key>name</key>
<string>keyword</string>
</dict>

<dict>
  <key>comment</key>
  <string>
     Macaroni's new keywords which resemble access rules.
  </string>
  <key>match</key>
<string>s*(\~friend|\~hidden|\~global)s*</string>
<key>name</key>
<string>storage.modifier.c++</string>
</dict>

<dict>
  <key>comment</key>
  <string>
    Macaroni's variants on C++ access, without the colon.
  </string>
  <key>match</key>
<string>\b(private|protected|public)\b</string>
<key>name</key>
<string>storage.modifier.c++</string>
</dict>

<dict>
  <key>comment</key>
  <string>
    The odd ~hfile keyword. I'm using the ankle braces to match the whole thing and giving it a weird color style for fun.
  </string>
  <key>match</key>
<string>\~hfile\s*=\s*\&lt;[\w\.\/]+&gt;</string>
<key>name</key>
<string>storage.type.c++</string>
</dict>


<dict>
<key>comment</key>
<string>
                END CUSTOM SYNTAX RULES

The rest of this code just inherits from the standard C++ syntax rules.

</string>
</dict>

          <dict>
             <key>include</key>
             <string>source.c++</string>
          </dict>
       </array>
       <key>scopeName</key>
       <string>source.macaroni</string>
       <key>uuid</key>
       <string>26251B18-6B1D-11D9-AFDB-000D93189AF6</string>
    </dict>
    </plist>
